---
steps:
  # Build the container image
  - id: docker-build
    name: "gcr.io/cloud-builders/docker"
    args:
      ["build", "-t", "gcr.io/zeero-marketplace/discord-bot:$COMMIT_SHA", "."]
  # Push the container image to Container Registry
  - id: docker-push
    name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/zeero-marketplace/discord-bot:$COMMIT_SHA"]
  # Deploy container image to Cloud Run, and start oauth-server
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      - run
      - deploy
      - oauth-server
      - --image
      - gcr.io/zeero-marketplace/discord-bot:$COMMIT_SHA
      - --args=run,start:prod
      - --region
      - us-west1
      - --port=8080
      - --allow-unauthenticated
      - >-
        --set-secrets=
        DB_HOST=DB_HOST:latest,
        DB_USER=DB_USER:latest,
        DB_PASSWORD=DB_PASSWORD:latest,
        DB_NAME=discord-bot,
        DB_PORT=5432,
        RAID_CONCLUDE_INTERVAL_IN_SECONDS=10,
        RAID_MATCH_INTERVAL_IN_SECONDS=10,
        BASIC_SWAGGER_PASSWORD=BASIC_SWAGGER_PASSWORD:latest,
        DISCORD_TOKEN=DISCORD_TOKEN:latest,
        DISCORD_CLIENT_ID=DISCORD_CLIENT_ID:latest,
        RAID_LOG_CHANNEL_ID=RAID_LOG_CHANNEL_ID:latest,
        ZEERO_API_URL=ZEERO_API_URL:latest,
      - --set-cloudsql-instances=zeero-marketplace:us-west1:discord-bot
images:
  - gcr.io/zeero-marketplace/discord-bot
# for some reason GCP now complains when using the default service account in a trigger, if this isn't set. Not sure why it's not a problem on staging
options:
  logging: CLOUD_LOGGING_ONLY
